# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# вычислите и выведите y


print(f'{"*" * 10} Задание 1 {"*" * 10}')

equation = 'y = -12x + 11111140.2121'
x = 2.5
k = 0

tmp = equation.split(' ')
for i in tmp:
    # находим элемент, в котором x
    if 'x' in i:
        k = float(i[:-1])
        break

b = float(tmp[-1])
y = k * x + b

print(f'формула: {equation}')
print(f'k: {k}, b: {b}')
print(f'при x={x}, y={y}')

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)


print('\n' * 3)
print(f'{"*" * 10} Задание 2 {"*" * 10}')


def date_is_correct(date):
    splitted_date = date.split('.')
    day = splitted_date[0]
    month = splitted_date[1]
    year = splitted_date[2]

    day31 = [1, 3, 5, 7, 8, 10, 12]

    if not day.isnumeric() or not month.isnumeric() or not year.isnumeric():
        print('Не бывает таких числе в месяце')
        return False

    if len(date) != 10 or len(day) != 2 or len(month) != 2 or len(year) != 4:
        print('Длина полей не совпадает с маской DD.MM.YYYY')
        return False

    day = int(day)
    month = int(month)
    year = int(year)

    if not 32 > day > 0 or not 13 > month > 0 or not 9999 > year > 1:
        print('Неподходящие диапазоны чисел')
        return False

    # Если в этом месяце не 31 день, а число - 31. Фераль считаем 30-ти дневным
    if month not in day31 and day == 31:
        print('В этом месяце не может быть 31 день')
        return False

    return True


# Пример корректной даты
date = '01.11.1985'
print(f'{date} -> {date_is_correct(date)}\n')
# Примеры некорректных дат
date = '01.22.1001'
print(f'{date} -> {date_is_correct(date)}\n')
date = '1.12.1001'
print(f'{date} -> {date_is_correct(date)}\n')
date = '-2.10.3001'
print(f'{date} -> {date_is_correct(date)}\n')

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3


print('\n' * 3)
print(f'{"*" * 10} Задание 3. Перевёрнутая башня {"*" * 10}')


def get_door(flat):
    if not 2000000000 >= flat > 0:
        print('ну хорош, и так задача сложная была. Номер квартиры целый и от 0 до 2 000 000 000')
        return False

    block = 0
    stop = 0

    # находим, в квадрате какого числа находится нужная квартира
    i = 0
    while block <= flat and block <= 2000000000:
        block += i ** 2
        if block >= flat:
            stop = i
            break
        i += 1

    # последняя квартира предыдущего квадрата
    last_num = block - stop ** 2

    # на каком этаже закончился последний квадрат
    last_num_stage = 0
    for i in range(stop):
        last_num_stage += i

    stage = (flat - last_num - 1) // stop + last_num_stage + 1
    door = (flat - last_num) % stop or stop

    return {'stage': stage, 'door': door}


flat_num = int(input('Номер квартиры: '))

print(f'этаж: {get_door(flat_num)["stage"]}, дверь: {get_door(flat_num)["door"]}')
