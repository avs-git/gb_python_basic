# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]


print(f'{"*" * 10} Задание 1 {"*" * 10}')

a = [2, -5, 8, 9, -25, 25, 4]
b = []

for i in a:
    if i > 0 and i ** 0.5 == int(i ** 0.5):
        b.append(int(i ** 0.5))

print(a)
print(b)



# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

print('\n' * 3)
print(f'{"*" * 10} Задание 2 {"*" * 10}')

date = '11.11.2013'

day_name = {1: 'первое',
            2: 'второе',
            3: 'третье',
            4: 'четвертое',
            5: 'пятое',
            6: 'шестое',
            7: 'седьмое',
            8: 'восьмое',
            9: 'девятое',
            10: 'десятое',
            11: 'одиннадцатое',
            12: 'двенадцатое',
            13: 'тринадцатое',
            14: 'четырнадцатое',
            15: 'пятнадцатое',
            16: 'шестнадцатое',
            17: 'семнадцатое',
            18: 'восемнадцатое',
            19: 'девятнадцатое',
            20: 'двадцатое',
            30: 'тридцатое',
            '20+': 'двадцать',
            '30+': 'тридцать',
            }

month_name = {1: 'января',
              2: 'февраля',
              3: 'марта',
              4: 'апреля',
              5: 'мая',
              6: 'июня',
              7: 'июля',
              8: 'августа',
              9: 'сентября',
              10: 'октября',
              11: 'ноября',
              12: 'декабря',
              }


def get_day_name(num):
    if num < 21:
        return day_name[num]
    elif 20 < num < 30:
        return day_name['20+'] + ' ' + day_name[num % 10]
    elif num > 29:
        return day_name['30+'] + ' ' + day_name[num % 10]


def text_date(date):
    splitted_date = date.split('.')
    day = int(splitted_date[0])
    month = int(splitted_date[1])
    year = splitted_date[2]
    return f'{get_day_name(day)} {month_name[month]} {year} года'


print(date)
print(text_date(date))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

print('\n' * 3)
print(f'{"*" * 10} Задание 3 {"*" * 10}')


import random

a = []
n = int(input('введите количество элементов списка'))
for i in range(n):
    a.append(random.randint(-100, 100))

print(a)


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print('\n' * 3)
print(f'{"*" * 10} Задание 4 {"*" * 10}')

lst = [1, 2, 4, 5, 6, 2, 5, 2]

# list - для преобразования множества в список
lst2 = list(set(lst))

# копируем lst в lst3 для сохранения исходного списка
lst3 = lst[:]

for item in lst3:
    if lst3.count(item) > 1:
        for j in range(lst3.count(item)):
            lst3.remove(item)

print(f'исходный: {lst}')
print(lst2)
print(lst3)

